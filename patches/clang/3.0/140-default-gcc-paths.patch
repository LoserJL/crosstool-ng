diff -urN b/include/clang/Driver/ToolChain.h c/include/clang/Driver/ToolChain.h
--- b/include/clang/Driver/ToolChain.h	2011-11-07 11:15:01.000000000 +0100
+++ c/include/clang/Driver/ToolChain.h	2013-09-07 11:30:40.386741370 +0200
@@ -16,6 +16,7 @@
 #include "llvm/ADT/Triple.h"
 #include "llvm/Support/Path.h"
 #include <string>
+#include "Util.h"
 
 namespace clang {
 namespace driver {
@@ -28,6 +29,7 @@
   class JobAction;
   class ObjCRuntime;
   class Tool;
+  class ArgList;
 
 /// ToolChain - Access to tools for a single platform.
 class ToolChain {
@@ -71,6 +73,9 @@
     return Triple.getTriple();
   }
 
+  virtual void AddLinkSearchPathArgs(const ArgList &Args, ArgStringList &CmdArgs) const;
+  virtual void AddIncludeSearchPathArgs(const ArgList &Args, ArgStringList &CmdArgs) const;
+  
   path_list &getFilePaths() { return FilePaths; }
   const path_list &getFilePaths() const { return FilePaths; }
 
diff -urN b/lib/Driver/ToolChain.cpp c/lib/Driver/ToolChain.cpp
--- b/lib/Driver/ToolChain.cpp	2013-09-07 11:29:23.820677474 +0200
+++ c/lib/Driver/ToolChain.cpp	2013-09-07 11:30:40.386741370 +0200
@@ -18,9 +18,17 @@
 #include "clang/Driver/ObjCRuntime.h"
 #include "clang/Driver/Options.h"
 #include "llvm/Support/ErrorHandling.h"
+#include "clang/Driver/ArgList.h"
 using namespace clang::driver;
 using namespace clang;
 
+#define CLANG_STRINGIFY(x) #x
+#define CLANG_TOSTRING(x) CLANG_STRINGIFY(x)
+#ifndef CLANG_GCC_VERSION
+#define CLANG_GCC_VERSION 
+#endif
+#define CLANG_GCC_VERSION_STR CLANG_TOSTRING(CLANG_GCC_VERSION)
+
 ToolChain::ToolChain(const HostInfo &H, const llvm::Triple &T)
   : Host(H), Triple(T) {
 }
@@ -32,6 +40,39 @@
  return Host.getDriver();
 }
 
+void ToolChain::AddIncludeSearchPathArgs(const ArgList &Args, ArgStringList &CmdArgs) const {
+  llvm::sys::Path P(getDriver().Dir);
+  std::string GccVersion(CLANG_GCC_VERSION_STR);
+
+  // Checks
+  if (P.isEmpty() || GccVersion.empty()) {
+    return;
+  }
+
+  P.eraseComponent(); // Remove /bin from foo/bin
+  std::string BaseDir = P.str() + std::string("/lib/gcc/") + Host.getTriple().getTriple() + std::string("/") + GccVersion;
+
+  CmdArgs.push_back(Args.MakeArgString("-I" + BaseDir + "/include"));
+  CmdArgs.push_back(Args.MakeArgString("-I" + BaseDir + "/include-fixed"));
+  CmdArgs.push_back(Args.MakeArgString("-I" + BaseDir + "/../../../../" + Host.getTriple().getTriple() + "/include"));
+}
+
+void ToolChain::AddLinkSearchPathArgs(const ArgList &Args, ArgStringList &CmdArgs) const {
+  llvm::sys::Path P(getDriver().Dir);
+  std::string GccVersion(CLANG_GCC_VERSION_STR);
+
+  // Checks
+  if (P.isEmpty() || GccVersion.empty()) {
+    return;
+  }
+
+  P.eraseComponent(); // Remove /bin from foo/bin
+  std::string BaseDir = P.str() + std::string("/lib/gcc/") + Host.getTriple().getTriple() + std::string("/") + GccVersion;
+    
+  CmdArgs.push_back(Args.MakeArgString("-L" + BaseDir + "/lib"));
+  CmdArgs.push_back(Args.MakeArgString("-L" + BaseDir + "/../../../../" + Host.getTriple().getTriple() + "/lib"));
+}
+
 std::string ToolChain::GetFilePath(const char *Name) const {
   return Host.getDriver().GetFilePath(Name, *this);
 
diff -urN b/lib/Driver/Tools.cpp c/lib/Driver/Tools.cpp
--- b/lib/Driver/Tools.cpp	2011-11-07 11:27:39.000000000 +0100
+++ c/lib/Driver/Tools.cpp	2013-09-07 11:30:43.490658923 +0200
@@ -1534,6 +1534,13 @@
   // preprocessed inputs and configure concludes that -fPIC is not supported.
   Args.ClaimAllArgs(options::OPT_D);
 
+  if (isa<LinkJobAction>(JA)) {
+     getToolChain().AddLinkSearchPathArgs(Args, CmdArgs);
+  } else {
+     getToolChain().AddIncludeSearchPathArgs(Args, CmdArgs);
+  }
+
+
   // Manually translate -O to -O2 and -O4 to -O3; let clang reject
   // others.
   if (Arg *A = Args.getLastArg(options::OPT_O_Group)) {
